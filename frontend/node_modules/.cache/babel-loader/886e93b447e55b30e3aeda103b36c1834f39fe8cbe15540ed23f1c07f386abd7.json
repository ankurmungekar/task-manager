{"ast":null,"code":"var _jsxFileName = \"/Users/ankur.m/Projects/task-manager/trello-clone/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './components/Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    const fetchBoards = async () => {\n      const response = await fetch('/api/boards');\n      const data = await response.json();\n      setBoards(data);\n    };\n    fetchBoards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n      board: board\n    }, board.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","App","_s","boards","setBoards","fetchBoards","response","fetch","data","json","className","children","map","board","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ankur.m/Projects/task-manager/trello-clone/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './components/Board';\nimport { Board as BoardType } from './types';\n\nconst App: React.FC = () => {\n    const [boards, setBoards] = useState<BoardType[]>([]);\n\n    useEffect(() => {\n        const fetchBoards = async () => {\n            const response = await fetch('/api/boards');\n            const data = await response.json();\n            setBoards(data);\n        };\n\n        fetchBoards();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {boards.map(board => (\n                <Board key={board.id} board={board} />\n            ))}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAc,EAAE,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,SAAS,CAACI,IAAI,CAAC;IACnB,CAAC;IAEDH,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfR,MAAM,CAACS,GAAG,CAACC,KAAK,iBACbb,OAAA,CAACF,KAAK;MAAgBe,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChB,EAAA,CApBID,GAAa;AAAAkB,EAAA,GAAblB,GAAa;AAsBnB,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}