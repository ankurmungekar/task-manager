{"ast":null,"code":"var _jsxFileName = \"/Users/ankur.m/Projects/task-manager/trello-clone/frontend/src/components/Card.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  card\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), card.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","card","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/Users/ankur.m/Projects/task-manager/trello-clone/frontend/src/components/Card.tsx"],"sourcesContent":["import React from 'react';\nimport { Card as CardType } from '../types';\n\ninterface CardProps {\n    card: CardType;\n}\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n    return (\n        <div className=\"card\">\n            <h4>{card.title}</h4>\n            {card.description && <p>{card.description}</p>}\n        </div>\n    );\n};\n\nexport default Card;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,IAAyB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5C,oBACIF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBJ,OAAA;MAAAI,QAAA,EAAKF,IAAI,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpBP,IAAI,CAACQ,WAAW,iBAAIV,OAAA;MAAAI,QAAA,EAAIF,IAAI,CAACQ;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAACE,EAAA,GAPIV,IAAyB;AAS/B,eAAeA,IAAI;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}