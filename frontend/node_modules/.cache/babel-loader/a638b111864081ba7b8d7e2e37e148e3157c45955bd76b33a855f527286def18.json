{"ast":null,"code":"var _jsxFileName = \"/Users/ankur.m/Projects/task-manager/trello-clone/frontend/src/components/Board.tsx\";\nimport React from 'react';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  board\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: board.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists\",\n      children: board.lists.map((list, index) => /*#__PURE__*/_jsxDEV(List, {\n        list: list,\n        index: index\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","List","jsxDEV","_jsxDEV","Board","board","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","lists","map","list","index","id","_c","$RefreshReg$"],"sources":["/Users/ankur.m/Projects/task-manager/trello-clone/frontend/src/components/Board.tsx"],"sourcesContent":["import React from 'react';\nimport List from './List';\nimport { Board as BoardType } from '../types';\n\ninterface BoardProps {\n  board: BoardType;\n}\n\nconst Board: React.FC<BoardProps> = ({ board }) => {\n  return (\n    <div className=\"board\">\n      <h2>{board.title}</h2>\n      <div className=\"lists\">\n        {board.lists.map((list, index) => (\n          <List key={list.id} list={list} index={index} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,KAA2B,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjD,oBACEF,OAAA;IAAKG,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBJ,OAAA;MAAAI,QAAA,EAAKF,KAAK,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBT,OAAA;MAAKG,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBF,KAAK,CAACQ,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3Bb,OAAA,CAACF,IAAI;QAAec,IAAI,EAAEA,IAAK;QAACC,KAAK,EAAEA;MAAM,GAAlCD,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GAXId,KAA2B;AAajC,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}